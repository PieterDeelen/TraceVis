/*
 * CallsReceivedVertexSizeSettings.java
 *
 * Author: Pieter Deelen
 * Created: August 25, 2005, 11:36 AM
 */

package tracevis.control.settings;

import javax.swing.JPanel;
import javax.swing.SpinnerNumberModel;

import tracevis.visualization.functions.CallsReceivedVertexSizeFunction;
import tracevis.visualization.functions.Scale;

/**
 * A configuration panel which allows the user to configure the "calls received"
 * vertex size function.
 * @author Pieter Deelen
 */
public class CallsReceivedVertexSizeSettings extends JPanel {
	/**
	 * Creates new form CallsReceivedVertexSizeSettings.
	 */
	public CallsReceivedVertexSizeSettings(CallsReceivedVertexSizeFunction.Settings settings) {
		initComponents();

		scaleFactorSpinner.setModel(new SpinnerNumberModel(1, 1, 10, 1));
		scaleFactorSpinner.setValue(settings.getScaleFactor());

		switch (settings.getScale()) {
			case LINEAR:
				linearButton.setSelected(true);
				break;
			case SQUARE_ROOT:
				squareRootButton.setSelected(true);
				break;
			case LOGARITHMIC:
				logarithmicButton.setSelected(true);
				break;
		}
	}

	public CallsReceivedVertexSizeFunction.Settings getSettings() {
		int scaleFactor = (Integer)scaleFactorSpinner.getValue();

		Scale scale;
		if (linearButton.isSelected()) {
			scale = Scale.LINEAR;
		} else if (squareRootButton.isSelected()) {
			scale = Scale.SQUARE_ROOT;
		} else if (logarithmicButton.isSelected()) {
			scale = Scale.LOGARITHMIC;
		} else {
			throw new RuntimeException("No button selected.");
		}

		return new CallsReceivedVertexSizeFunction.Settings(scaleFactor, scale);
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        scaleButtonGroup = new javax.swing.ButtonGroup();
        scaleFactorLabel = new javax.swing.JLabel();
        scaleFactorSpinner = new javax.swing.JSpinner();
        scaleLabel = new javax.swing.JLabel();
        linearButton = new javax.swing.JRadioButton();
        squareRootButton = new javax.swing.JRadioButton();
        logarithmicButton = new javax.swing.JRadioButton();
        fillerPanel = new javax.swing.JPanel();

        setLayout(new java.awt.GridBagLayout());

        scaleFactorLabel.setText("Scale Factor");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(scaleFactorLabel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(scaleFactorSpinner, gridBagConstraints);

        scaleLabel.setText("Scale");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(scaleLabel, gridBagConstraints);

        scaleButtonGroup.add(linearButton);
        linearButton.setText("Linear");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 5, 2, 5);
        add(linearButton, gridBagConstraints);

        scaleButtonGroup.add(squareRootButton);
        squareRootButton.setText("Square Root");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 5, 2, 5);
        add(squareRootButton, gridBagConstraints);

        scaleButtonGroup.add(logarithmicButton);
        logarithmicButton.setText("Logarithmic");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 5, 2, 5);
        add(logarithmicButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(fillerPanel, gridBagConstraints);

    }
    // </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel fillerPanel;
    private javax.swing.JRadioButton linearButton;
    private javax.swing.JRadioButton logarithmicButton;
    private javax.swing.ButtonGroup scaleButtonGroup;
    private javax.swing.JLabel scaleFactorLabel;
    private javax.swing.JSpinner scaleFactorSpinner;
    private javax.swing.JLabel scaleLabel;
    private javax.swing.JRadioButton squareRootButton;
    // End of variables declaration//GEN-END:variables

}
