/*
 * VertexPanel.java
 *
 * Author: Pieter Deelen
 * Created: November 24, 2005, 3:39 PM
 *
 */

package tracevis.visualization.detail;

import java.awt.BorderLayout;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;

import javax.swing.JTable;
import javax.swing.border.TitledBorder;

import tracevis.model.Program;
import tracevis.model.types.CallData;
import tracevis.model.types.ClassData;
import tracevis.utilities.TableSorter;
import tracevis.visualization.utilities.ColorModel;
import edu.uci.ics.jung.graph.Edge;
import edu.uci.ics.jung.graph.Vertex;

/**
 * A panel which shows information about a vertex.
 * @author  Pieter Deelen
 */
public class VertexPanel extends javax.swing.JPanel {
	private final Vertex vertex;
	private final ClassData classData;

	private final Program program;
	private final ColorModel colorModel;

	private Map<String, Integer> callCounts;

	private class VertexMethodsTableModel extends MethodsTableModel {
		private final List<String> methodNames;

		public VertexMethodsTableModel() {
			methodNames = new ArrayList<String>();

			for (String method : callCounts.keySet()) {
				methodNames.add(method);
			}
		}

		@Override
		protected int getMethodCount() {
			return methodNames.size();
		}

		@Override
		protected String getMethodName(int rowIndex) {
			return methodNames.get(rowIndex);
		}

		@Override
		protected int getMethodCallCount(int rowIndex) {
			String methodName = methodNames.get(rowIndex);
			return callCounts.get(methodName);
		}
	}

	private final MethodsTableModel methodsTableModel;

	/**
	 * Creates new form VertexPanel.
	 * @param colorModel the color model.
	 * @param vertex the vertex to visualize.
	 */
	public VertexPanel(Program program, ColorModel colorModel, Vertex vertex) {
		this.program = program;
		this.colorModel = colorModel;

		this.vertex = vertex;
		this.classData = (ClassData)vertex.getUserDatum("tracevis.model.Program");

		String title = classData.getShortName() + " (" + classData.getPackageName() + ")";
		setBorder(new TitledBorder(title));

		callCounts = new HashMap<String, Integer>();

		updateCallCounts();
		methodsTableModel = new VertexMethodsTableModel();

		initComponents();
		update();
	}

	private void updateCallCounts() {
		callCounts = new HashMap<String, Integer>();
		for (Edge edge : (Set<Edge>)vertex.getInEdges()) {
			CallData callData = (CallData)edge.getUserDatum("tracevis.model.Program");
			for (String method : callData.getMethods()) {
				int count = callData.getMethodCallCount(method);

				Integer oldCount = callCounts.get(method);
				if (oldCount == null) {
					oldCount = 0;
				}
				callCounts.put(method, oldCount + count);
			}
		}
	}

	/**
	 * Updates the shown values.
	 */
	public void update() {
		callsReceivedValue.setText(Integer.toString(classData.getCallsReceived()));
		callsSentValue.setText(Integer.toString(classData.getCallsSent()));
		instanceCountValue.setText(Integer.toString(classData.getInstanceCount()));

		if (program.isFilteredClass(classData.getName())) {
			classFilterButton.setText("Show Class");
		} else {
			classFilterButton.setText("Hide Class");
		}

		updateCallCounts();
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        instanceCountKey = new javax.swing.JLabel();
        instanceCountValue = new javax.swing.JLabel();
        callsReceivedCountKey = new javax.swing.JLabel();
        callsReceivedValue = new javax.swing.JLabel();
        callsSentCountKey = new javax.swing.JLabel();
        callsSentValue = new javax.swing.JLabel();
        methodsTablePanel = new javax.swing.JPanel();
        TableSorter tableSorter = new TableSorter(methodsTableModel);
        methodsTable = new JTable(tableSorter);
        tableSorter.setTableHeader(methodsTable.getTableHeader());
        tableSorter.setSortingStatus(0, TableSorter.ASCENDING);
        classFilterButton = new javax.swing.JButton();
        customizeColorButton = new javax.swing.JButton();
        dummyPanel = new javax.swing.JPanel();

        setLayout(new java.awt.GridBagLayout());

        instanceCountKey.setText("Instances:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(instanceCountKey, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(instanceCountValue, gridBagConstraints);

        callsReceivedCountKey.setText("Calls Received:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(callsReceivedCountKey, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(callsReceivedValue, gridBagConstraints);

        callsSentCountKey.setText("Calls Made:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(callsSentCountKey, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(callsSentValue, gridBagConstraints);

        methodsTablePanel.setLayout(new java.awt.BorderLayout());

        methodsTablePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Methods:"));
        methodsTablePanel.add(methodsTable.getTableHeader(), BorderLayout.NORTH);
        methodsTable.setShowHorizontalLines(false);
        methodsTable.setShowVerticalLines(false);
        methodsTablePanel.add(methodsTable, java.awt.BorderLayout.CENTER);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(methodsTablePanel, gridBagConstraints);

        classFilterButton.setText("Hide Class");
        classFilterButton.addActionListener(new java.awt.event.ActionListener() {
            @Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
                classFilterButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(classFilterButton, gridBagConstraints);

        customizeColorButton.setText("Customize Color...");
        customizeColorButton.addActionListener(new java.awt.event.ActionListener() {
            @Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
                customizeColorButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(customizeColorButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(dummyPanel, gridBagConstraints);

    }// </editor-fold>//GEN-END:initComponents

	private void classFilterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classFilterButtonActionPerformed
		String className = classData.getName();
		if (program.isFilteredClass(className)) {
			program.removeClassFilter(className);
		} else {
			program.addClassFilter(className);
		}
		program.filter();
	}//GEN-LAST:event_classFilterButtonActionPerformed

	private void customizeColorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customizeColorButtonActionPerformed
		ColorCustomizeDialog dialog = new ColorCustomizeDialog(colorModel, vertex);
		dialog.setVisible(true);
	}//GEN-LAST:event_customizeColorButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel callsReceivedCountKey;
    private javax.swing.JLabel callsReceivedValue;
    private javax.swing.JLabel callsSentCountKey;
    private javax.swing.JLabel callsSentValue;
    private javax.swing.JButton classFilterButton;
    private javax.swing.JButton customizeColorButton;
    private javax.swing.JPanel dummyPanel;
    private javax.swing.JLabel instanceCountKey;
    private javax.swing.JLabel instanceCountValue;
    private javax.swing.JTable methodsTable;
    private javax.swing.JPanel methodsTablePanel;
    // End of variables declaration//GEN-END:variables

}
